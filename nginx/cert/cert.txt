1. create the root ca:
openssl req -x509 -sha256 -nodes -days 3650 -newkey rsa:2048 -keyout root-key.key -out root-cert.crt
2. create the request:
openssl req -out web-cert.csr -new -newkey rsa:2048 -nodes -keyout web-key.key

openssl genrsa -out nginx/cert/client-key.key 2048
openssl req -new -sha256 -out nginx/cert/client-cert.csr -key nginx/cert/client-key.key -config nginx/cert/ssl.conf
openssl req -text -noout -in web-cert.csr

3. trust:
openssl x509 -req -in web-cert.csr -CA root-cert.crt -CAkey root-key.key -CAcreateserial -out web-cert.crt -days 365 -sha256 -extfile dev.mergebot.com.ext
openssl x509 -req -sha256 -days 365 -in web-cert.csr -signkey web-key.key -out web-cert.crt -extensions req_ext -extfile ssl.conf

openssl x509 -req -in nginx/cert/web-cert.csr -CA nginx/cert/root-cert.crt \
-CAkey nginx/cert/root-key.key -CAcreateserial \
-out nginx/cert/web-cert.crt -days 730 -sha256 \
-extensions req_ext -extfile nginx/cert/ssl.conf

openssl x509 -req -in nginx/cert/client-cert.csr -CA nginx/cert/root-cert.crt \
-CAkey nginx/cert/root-key.key -CAcreateserial \
-out nginx/cert/client-cert.crt -days 730 -sha256 \
-extensions req_ext -extfile nginx/cert/ssl.conf

openssl x509 -req -in web-cert.csr -CA root-cert.crt -CAkey root-key.key -CAcreateserial -out web-cert.crt -days 365 -sha256